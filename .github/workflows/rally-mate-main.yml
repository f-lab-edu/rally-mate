name: rally-mate CI with Gradle

on:
  push:
    branches: [ test ]
  pull_request: 
    branches: [ test ]
  

# Actions 탭에서 수동 실행 가능
#   workflow_dispatch:
#     inputs:
#       region:
#         required: true
#         type: string
#       env:
#         required: true
#         type: string

env:
  PROJECT: rally-mate


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # branch checkout
    - uses: actions/checkout@v3

    # Cache workflow 실행 시간 개선 위해 dependencies와 build output을 캐싱
    # https://www.daleseo.com/github-actions-cache/
    - name: Caching Gradle
      uses: actions/cache@v3
      with:
        path: |
         ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash

    - name: Test with Gradle
      run: ./gradlew test

    - name: Build with Gradle
      run: ./gradlew build -x test
      shell: bash

    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_ACCESS_TOKEN}}  

    # TODO: jib로 대체 (https://alden-kang.tistory.com/1)
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKERHUB_USER}}/${{ env.PROJECT_NAME }} .

    - name: Push Image into Dockerhub
      run: docker push ${{ secrets.DOCKERHUB_USER }}/${{ env.PROJECT_NAME }}

